// <auto-generated />
using System;
using MLDev.LOTOW.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MLDev.LOTOW.Migrations
{
    [DbContext(typeof(LOTOWDbContext))]
    partial class LOTOWDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("LOTOW")
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MLDev.LOTOW.Models.Character", b =>
                {
                    b.Property<int>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CharacterId"));

                    b.Property<decimal>("Cost")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("Level")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("CharacterId");

                    b.ToTable("Characters", "LOTOW");
                });

            modelBuilder.Entity("MLDev.LOTOW.Models.CharacterStat", b =>
                {
                    b.Property<int>("CharacterStatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CharacterStatId"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("CurrentValue")
                        .HasColumnType("int");

                    b.Property<int>("InitialValue")
                        .HasColumnType("int");

                    b.Property<int>("StatId")
                        .HasColumnType("int");

                    b.HasKey("CharacterStatId");

                    b.HasIndex("CharacterId");

                    b.HasIndex("StatId");

                    b.ToTable("CharacterStats", "LOTOW");
                });

            modelBuilder.Entity("MLDev.LOTOW.Models.Stat", b =>
                {
                    b.Property<int>("StatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatId"));

                    b.Property<bool>("IsFinite")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Order")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("StatId");

                    b.ToTable("Stats", "LOTOW");
                });

            modelBuilder.Entity("MLDev.LOTOW.Models.StatModifier", b =>
                {
                    b.Property<int>("StatModifierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatModifierId"));

                    b.Property<int?>("CharacterStatId")
                        .HasColumnType("int");

                    b.Property<string>("SourceDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("StatModifierId");

                    b.HasIndex("CharacterStatId");

                    b.ToTable("StatModifiers", "LOTOW");
                });

            modelBuilder.Entity("MLDev.LOTOW.Models.CharacterStat", b =>
                {
                    b.HasOne("MLDev.LOTOW.Models.Character", "Character")
                        .WithMany("CharacterStats")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLDev.LOTOW.Models.Stat", "Stat")
                        .WithMany()
                        .HasForeignKey("StatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Stat");
                });

            modelBuilder.Entity("MLDev.LOTOW.Models.StatModifier", b =>
                {
                    b.HasOne("MLDev.LOTOW.Models.CharacterStat", null)
                        .WithMany("StatModifiers")
                        .HasForeignKey("CharacterStatId");
                });

            modelBuilder.Entity("MLDev.LOTOW.Models.Character", b =>
                {
                    b.Navigation("CharacterStats");
                });

            modelBuilder.Entity("MLDev.LOTOW.Models.CharacterStat", b =>
                {
                    b.Navigation("StatModifiers");
                });
#pragma warning restore 612, 618
        }
    }
}
